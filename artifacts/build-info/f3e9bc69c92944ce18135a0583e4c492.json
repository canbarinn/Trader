{"id":"f3e9bc69c92944ce18135a0583e4c492","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/SingleSwap.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract SingleSwap {\n\n    address public constant routerAddress = 0xE592427A0AEce92De3Edee1F18E0157C05861564\t;\n\n\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n\n    ISwapRouter public immutable swapRouter = ISwapRouter(routerAddress);\n\n    // This example swaps LINK/WETH for single path swaps and LINK/WETH/WETH for multi path swaps.\n\n    address public constant LINK = 0x779877A7B0D9E8603169DdbD7836e478b4624789;\n    address public constant WETH = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6;\n\n    IERC20 public linkToken = IERC20(LINK);\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n\n    /// @notice swapExactInputSingle swaps a fixed amount of LINK for a maximum possible amount of WETH\n    /// using the LINK/WETH 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its LINK for this function to succeed.\n    /// @param amountIn The exact amount of LINK that will be swapped for WETH.\n    /// @return amountOut The amount of WETH received.\n    function swapExactInputSingle(\n        uint256 amountIn\n    ) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // ONLY FOR USING TOKENS OF CONTRACT\n        // // Transfer the specified amount of LINK to this contract.\n        // TransferHelper.safeTransferFrom(\n        //     LINK,\n        //     msg.sender,\n        //     address(this),\n        //     amountIn\n        // );\n\n        // Approve the router to spend LINK.\n        linkToken.approve(address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams({\n                tokenIn: LINK,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: address(this), // ONLY FOR USING TOKENS OF CONTRACT\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of LINK for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its LINK for this function to succeed. As the amount of input LINK is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH to receive from the swap.\n    /// @param amountInMaximum The amount of LINK we are willing to spend to receive the specified amount of WETH.\n    /// @return amountIn The amount of LINK actually spent in the swap.\n    function swapExactOutputSingle(\n        uint256 amountOut,\n        uint256 amountInMaximum\n    ) external returns (uint256 amountIn) {\n        // ONLY FOR USING TOKENS OF CONTRACT\n        // Transfer the specified amount of LINK to this contract.\n        // TransferHelper.safeTransferFrom(\n        //     LINK,\n        //     msg.sender,\n        //     address(this),\n        //     amountInMaximum\n        // );\n\n        // Approve the router to spend the specifed `amountInMaximum` of LINK.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        linkToken.approve(address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params = ISwapRouter\n            .ExactOutputSingleParams({\n                tokenIn: LINK,\n                tokenOut: WETH,\n                fee: poolFee,\n                recipient: address(this), // ONLY FOR USING TOKENS OF CONTRACT\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            linkToken.approve(address(swapRouter), 0);\n            linkToken.transfer(\n                address(this), // ONLY FOR USING TOKENS OF CONTRACT\n                amountInMaximum - amountIn\n            );\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[13]},"id":14,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"71:144:0","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IUniswapV3SwapCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"254:898:0","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"amount0Delta","nodeType":"VariableDeclaration","scope":12,"src":"1197:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"amount1Delta","nodeType":"VariableDeclaration","scope":12,"src":"1226:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12,"src":"1255:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1289:0:0"},"scope":13,"src":"1157:133:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":14,"src":"215:1077:0"}],"src":"45:1248:0"},"id":0},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[109],"IUniswapV3SwapCallback":[13]},"id":110,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:1"},{"id":16,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:1"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":17,"nodeType":"ImportDirective","scope":110,"sourceUnit":14,"src":"91:83:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":19,"name":"IUniswapV3SwapCallback","nodeType":"UserDefinedTypeName","referencedDeclaration":13,"src":"305:22:1","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3SwapCallback_$13","typeString":"contract IUniswapV3SwapCallback"}},"id":20,"nodeType":"InheritanceSpecifier","src":"305:22:1"}],"contractDependencies":[13],"contractKind":"interface","documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"176:104:1","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":109,"linearizedBaseContracts":[109,13],"name":"ISwapRouter","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":37,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":37,"src":"374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":37,"src":"399:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":37,"src":"425:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":25,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":37,"src":"445:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":37,"src":"472:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":37,"src":"498:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":37,"src":"524:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":37,"src":"558:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":35,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nodeType":"StructDefinition","scope":109,"src":"334:256:1","visibility":"public"},{"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"596:250:1","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":45,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":45,"src":"877:38:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":39,"name":"ExactInputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":37,"src":"877:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:1"},"returnParameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":45,"src":"943:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:1"},"scope":109,"src":"851:111:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":56,"members":[{"constant":false,"id":47,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":56,"src":"1002:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":46,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":56,"src":"1022:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":56,"src":"1049:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":56,"src":"1075:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":56,"src":"1101:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nodeType":"StructDefinition","scope":109,"src":"968:164:1","visibility":"public"},{"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"1138:273:1","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":64,"src":"1436:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$56_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":58,"name":"ExactInputParams","nodeType":"UserDefinedTypeName","referencedDeclaration":56,"src":"1436:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$56_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:1"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":64,"src":"1496:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:1"},"scope":109,"src":"1416:99:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":81,"members":[{"constant":false,"id":66,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":81,"src":"1562:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":81,"src":"1587:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":81,"src":"1613:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":69,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":81,"src":"1633:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":81,"src":"1660:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":81,"src":"1686:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":81,"src":"1713:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":81,"src":"1746:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":79,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nodeType":"StructDefinition","scope":109,"src":"1521:257:1","visibility":"public"},{"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"1784:250:1","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":89,"src":"2066:39:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":83,"name":"ExactOutputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":81,"src":"2066:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":89,"src":"2133:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:1"},"scope":109,"src":"2039:112:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":100,"members":[{"constant":false,"id":91,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":100,"src":"2192:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":100,"src":"2212:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":100,"src":"2239:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":100,"src":"2265:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":100,"src":"2292:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nodeType":"StructDefinition","scope":109,"src":"2157:165:1","visibility":"public"},{"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"2328:284:1","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":108,"src":"2638:33:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$100_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":102,"name":"ExactOutputParams","nodeType":"UserDefinedTypeName","referencedDeclaration":100,"src":"2638:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$100_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:1"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":108,"src":"2699:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:1"},"scope":109,"src":"2617:100:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":110,"src":"280:2439:1"}],"src":"45:2675:1"},"id":1},"contracts/SingleSwap.sol":{"ast":{"absolutePath":"contracts/SingleSwap.sol","exportedSymbols":{"IERC20":[139],"ISwapRouter":[109],"IUniswapV3SwapCallback":[13],"SingleSwap":[283]},"id":284,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":111,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:2"},{"id":112,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"69:19:2"},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":113,"nodeType":"ImportDirective","scope":284,"sourceUnit":110,"src":"90:68:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":139,"linearizedBaseContracts":[139],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"70a08231","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":120,"src":"202:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"201:17:2"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":120,"src":"242:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:9:2"},"scope":139,"src":"183:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":129,"src":"275:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":129,"src":"287:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"274:28:2"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":129,"src":"321:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":126,"name":"bool","nodeType":"ElementaryTypeName","src":"321:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"320:6:2"},"scope":139,"src":"257:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":138,"src":"350:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":138,"src":"367:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:33:2"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":138,"src":"401:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":135,"name":"bool","nodeType":"ElementaryTypeName","src":"401:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"400:6:2"},"scope":139,"src":"333:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":284,"src":"160:249:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":283,"linearizedBaseContracts":[283],"name":"SingleSwap","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"3268cc56","id":142,"mutability":"constant","name":"routerAddress","nodeType":"VariableDeclaration","scope":283,"src":"438:82:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845353932343237413041456365393244653345646565314631384530313537433035383631353634","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:42:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xE592427A0AEce92De3Edee1F18E0157C05861564"},"visibility":"public"},{"constant":false,"functionSelector":"c31c9c07","id":147,"mutability":"immutable","name":"swapRouter","nodeType":"VariableDeclaration","scope":283,"src":"961:68:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"},"typeName":{"id":143,"name":"ISwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":109,"src":"961:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}},"value":{"arguments":[{"id":145,"name":"routerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1015:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":144,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"1003:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$109_$","typeString":"type(contract ISwapRouter)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1003:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":true,"functionSelector":"1b6b6d23","id":150,"mutability":"constant","name":"LINK","nodeType":"VariableDeclaration","scope":283,"src":"1136:73:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307837373938373741374230443945383630333136394464624437383336653437386234363234373839","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1167:42:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0x779877A7B0D9E8603169DdbD7836e478b4624789"},"visibility":"public"},{"constant":true,"functionSelector":"ad5c4648","id":153,"mutability":"constant","name":"WETH","nodeType":"VariableDeclaration","scope":283,"src":"1215:73:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307842344642463237313134334634464266374239314135646564333138303565343262323230386436","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1246:42:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"},"visibility":"public"},{"constant":false,"functionSelector":"57970e93","id":158,"mutability":"mutable","name":"linkToken","nodeType":"VariableDeclaration","scope":283,"src":"1295:38:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"},"typeName":{"id":154,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":139,"src":"1295:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"}},"value":{"arguments":[{"id":156,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1328:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":155,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"1321:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$139_$","typeString":"type(contract IERC20)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1321:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"}},"visibility":"public"},{"constant":true,"functionSelector":"089fe6aa","id":161,"mutability":"constant","name":"poolFee","nodeType":"VariableDeclaration","scope":283,"src":"1399:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":159,"name":"uint24","nodeType":"ElementaryTypeName","src":"1399:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"33303030","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1432:4:2","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},"visibility":"public"},{"body":{"id":206,"nodeType":"Block","src":"2007:1243:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":174,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2414:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}],"id":173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2406:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2406:7:2","typeDescriptions":{}}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2406:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":176,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2427:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":169,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2388:9:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":138,"src":"2388:17:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2388:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":178,"nodeType":"ExpressionStatement","src":"2388:48:2"},{"assignments":[182],"declarations":[{"constant":false,"id":182,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":206,"src":"2684:48:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":181,"name":"ISwapRouter.ExactInputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":37,"src":"2684:34:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":198,"initialValue":{"arguments":[{"id":185,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2810:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2842:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"poolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2869:7:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":190,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2913:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SingleSwap_$283","typeString":"contract SingleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SingleSwap_$283","typeString":"contract SingleSwap"}],"id":189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2905:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2905:7:2","typeDescriptions":{}}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2905:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":192,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2983:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2983:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":194,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3026:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3070:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3108:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":183,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2735:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$109_$","typeString":"type(contract ISwapRouter)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":37,"src":"2735:47:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$37_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"2735:389:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"2684:440:2"},{"expression":{"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":199,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3196:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":202,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3236:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$37_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":200,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3208:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":45,"src":"3208:27:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$37_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3208:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3196:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":205,"nodeType":"ExpressionStatement","src":"3196:47:2"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"1444:459:2","text":"@notice swapExactInputSingle swaps a fixed amount of LINK for a maximum possible amount of WETH\n using the LINK/WETH 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its LINK for this function to succeed.\n @param amountIn The exact amount of LINK that will be swapped for WETH.\n @return amountOut The amount of WETH received."},"functionSelector":"73bd43ad","id":207,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactInputSingle","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":207,"src":"1947:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1937:32:2"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":207,"src":"1988:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:19:2"},"scope":283,"src":"1908:1342:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":281,"nodeType":"Block","src":"4014:1707:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":222,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"4546:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}],"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4538:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:2","typeDescriptions":{}}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4538:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":224,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"4559:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":217,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"4520:9:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":138,"src":"4520:17:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4520:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":226,"nodeType":"ExpressionStatement","src":"4520:55:2"},{"assignments":[230],"declarations":[{"constant":false,"id":230,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":281,"src":"4586:49:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":229,"name":"ISwapRouter.ExactOutputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":81,"src":"4586:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"id":246,"initialValue":{"arguments":[{"id":233,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4714:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":234,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4746:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":235,"name":"poolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4773:7:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":238,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4817:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SingleSwap_$283","typeString":"contract SingleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SingleSwap_$283","typeString":"contract SingleSwap"}],"id":237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4809:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"4809:7:2","typeDescriptions":{}}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4809:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":240,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4887:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4887:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":242,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"4931:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":243,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"4975:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5027:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":231,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"4638:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$109_$","typeString":"type(contract ISwapRouter)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactOutputSingleParams","nodeType":"MemberAccess","referencedDeclaration":81,"src":"4638:48:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactOutputSingleParams_$81_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountOut","amountInMaximum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"4638:405:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"4586:457:2"},{"expression":{"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":247,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5156:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":250,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5196:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$81_memory_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams memory"}],"expression":{"id":248,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"5167:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactOutputSingle","nodeType":"MemberAccess","referencedDeclaration":89,"src":"5167:28:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactOutputSingleParams_$81_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5167:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:47:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":253,"nodeType":"ExpressionStatement","src":"5156:47:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5463:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":255,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"5474:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5463:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":280,"nodeType":"IfStatement","src":"5459:256:2","trueBody":{"id":279,"nodeType":"Block","src":"5491:224:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":262,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"5531:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$109","typeString":"contract ISwapRouter"}],"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5523:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"5523:7:2","typeDescriptions":{}}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5523:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":257,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"5505:9:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":138,"src":"5505:17:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5505:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":266,"nodeType":"ExpressionStatement","src":"5505:41:2"},{"expression":{"arguments":[{"arguments":[{"id":272,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5604:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_SingleSwap_$283","typeString":"contract SingleSwap"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SingleSwap_$283","typeString":"contract SingleSwap"}],"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5596:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"5596:7:2","typeDescriptions":{}}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5596:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":274,"name":"amountInMaximum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"5664:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":275,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"5682:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5664:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":267,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"5560:9:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$139","typeString":"contract IERC20"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":129,"src":"5560:18:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5560:144:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"5560:144:2"}]}}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"3256:620:2","text":"@notice swapExactOutputSingle swaps a minimum possible amount of LINK for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its LINK for this function to succeed. As the amount of input LINK is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH to receive from the swap.\n @param amountInMaximum The amount of LINK we are willing to spend to receive the specified amount of WETH.\n @return amountIn The amount of LINK actually spent in the swap."},"functionSelector":"c4b69a18","id":282,"implemented":true,"kind":"function","modifiers":[],"name":"swapExactOutputSingle","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":282,"src":"3921:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3921:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":282,"src":"3948:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3948:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3911:66:2"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":282,"src":"3996:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3996:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:18:2"},"scope":283,"src":"3881:1840:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":284,"src":"411:5312:2"}],"src":"45:5679:2"},"id":2}},"contracts":{"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/SingleSwap.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SingleSwap.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SingleSwap.sol\":{\"keccak256\":\"0x32b8fedc3e57a7ca773870100ddad6ec2653c0a41dad8332481f28495ae0a682\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e624a2e5ca2b70ca0459a4b92dc587da9aea1e329b3e18ca1b6e83b7672aa263\",\"dweb:/ipfs/QmNRpHUqYpukH3fPwB37ZmudpAGw8CnNyYL3cY2cLUuuUJ\"]}},\"version\":1}"},"SingleSwap":{"abi":[{"inputs":[],"name":"LINK","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"linkToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolFee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"routerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"swapExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"name":"swapExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60a060405273e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b81525073779877a7b0d9e8603169ddbd7836e478b46247896000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100ae57600080fd5b5060805160601c610d4b6100e56000398061023c5280610395528061046052806104c3528061061b528061070c5250610d4b6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806373bd43ad1161005b57806373bd43ad14610105578063ad5c464814610135578063c31c9c0714610153578063c4b69a181461017157610088565b8063089fe6aa1461008d5780631b6b6d23146100ab5780633268cc56146100c957806357970e93146100e7575b600080fd5b6100956101a1565b6040516100a29190610c00565b60405180910390f35b6100b36101a7565b6040516100c09190610b25565b60405180910390f35b6100d16101bf565b6040516100de9190610b25565b60405180910390f35b6100ef6101d7565b6040516100fc9190610b92565b60405180910390f35b61011f600480360381019061011a91906108bd565b6101fb565b60405161012c9190610c1b565b60405180910390f35b61013d610446565b60405161014a9190610b25565b60405180910390f35b61015b61045e565b6040516101689190610bad565b60405180910390f35b61018b6004803603810190610186919061090f565b610482565b6040516101989190610c1b565b60405180910390f35b610bb881565b73779877a7b0d9e8603169ddbd7836e478b462478981565b73e592427a0aece92de3edee1f18e0157c0586156481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610279929190610b69565b602060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610894565b50600060405180610100016040528073779877a7b0d9e8603169ddbd7836e478b462478973ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103ec9190610bc8565b602060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e91906108e6565b915050919050565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610500929190610b69565b602060405180830381600087803b15801561051a57600080fd5b505af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610894565b50600060405180610100016040528073779877a7b0d9e8603169ddbd7836e478b462478973ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016106729190610be4565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c491906108e6565b91508282101561084e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f000000000000000000000000000000000000000000000000000000000000000060006040518363ffffffff1660e01b815260040161074a929190610b40565b602060405180830381600087803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610894565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb308486036040518363ffffffff1660e01b81526004016107fa929190610b69565b602060405180830381600087803b15801561081457600080fd5b505af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190610894565b505b5092915050565b60008151905061086481610ce7565b92915050565b60008135905061087981610cfe565b92915050565b60008151905061088e81610cfe565b92915050565b6000602082840312156108a657600080fd5b60006108b484828501610855565b91505092915050565b6000602082840312156108cf57600080fd5b60006108dd8482850161086a565b91505092915050565b6000602082840312156108f857600080fd5b60006109068482850161087f565b91505092915050565b6000806040838503121561092257600080fd5b60006109308582860161086a565b92505060206109418582860161086a565b9150509250929050565b61095481610c36565b82525050565b61096381610c36565b82525050565b61097281610c8d565b82525050565b61098181610cb1565b82525050565b61099081610cd5565b82525050565b610100820160008201516109ad600085018261094b565b5060208201516109c0602085018261094b565b5060408201516109d36040850182610ae9565b5060608201516109e6606085018261094b565b5060808201516109f96080850182610b07565b5060a0820151610a0c60a0850182610b07565b5060c0820151610a1f60c0850182610b07565b5060e0820151610a3260e0850182610ada565b50505050565b61010082016000820151610a4f600085018261094b565b506020820151610a62602085018261094b565b506040820151610a756040850182610ae9565b506060820151610a88606085018261094b565b506080820151610a9b6080850182610b07565b5060a0820151610aae60a0850182610b07565b5060c0820151610ac160c0850182610b07565b5060e0820151610ad460e0850182610ada565b50505050565b610ae381610c54565b82525050565b610af281610c74565b82525050565b610b0181610c74565b82525050565b610b1081610c83565b82525050565b610b1f81610c83565b82525050565b6000602082019050610b3a600083018461095a565b92915050565b6000604082019050610b55600083018561095a565b610b626020830184610987565b9392505050565b6000604082019050610b7e600083018561095a565b610b8b6020830184610b16565b9392505050565b6000602082019050610ba76000830184610969565b92915050565b6000602082019050610bc26000830184610978565b92915050565b600061010082019050610bde6000830184610996565b92915050565b600061010082019050610bfa6000830184610a38565b92915050565b6000602082019050610c156000830184610af8565b92915050565b6000602082019050610c306000830184610b16565b92915050565b6000610c4182610c54565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610c9882610c9f565b9050919050565b6000610caa82610c54565b9050919050565b6000610cbc82610cc3565b9050919050565b6000610cce82610c54565b9050919050565b6000610ce082610c83565b9050919050565b610cf081610c48565b8114610cfb57600080fd5b50565b610d0781610c83565b8114610d1257600080fd5b5056fea2646970667358221220be7e874e2674b38d1ce62b2a68b4ef070932dd3a949f78b7b7a600ae7c855f5d64736f6c63430007060033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xD4B PUSH2 0xE5 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x23C MSTORE DUP1 PUSH2 0x395 MSTORE DUP1 PUSH2 0x460 MSTORE DUP1 PUSH2 0x4C3 MSTORE DUP1 PUSH2 0x61B MSTORE DUP1 PUSH2 0x70C MSTORE POP PUSH2 0xD4B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73BD43AD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x171 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 DUP2 JUMP JUMPDEST PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP3 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 DUP7 SUB PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x828 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x864 DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x879 DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B4 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DD DUP5 DUP3 DUP6 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x930 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x941 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x981 DUP2 PUSH2 0xCB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x9AD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x9C0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x9D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x9E6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x9F9 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xA0C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xA1F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xA32 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xA4F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xA62 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xA75 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xA88 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xA9B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xAAE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xAC1 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xAD4 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAF2 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAA DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 PUSH2 0xC83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD07 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP2 EQ PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH31 0x874E2674B38D1CE62B2A68B4EF070932DD3A949F78B7B7A600AE7C855F5D64 PUSH20 0x6F6C634300070600330000000000000000000000 ","sourceMap":"411:5312:2:-:0;;;478:42;961:68;;;;;;;;;;;1167:42;1295:38;;;;;;;;;;;;;;;;;;;;411:5312;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10605:3","statements":[{"body":{"nodeType":"YulBlock","src":"67:77:3","statements":[{"nodeType":"YulAssignment","src":"77:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"92:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"86:5:3"},"nodeType":"YulFunctionCall","src":"86:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"132:5:3"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"108:23:3"},"nodeType":"YulFunctionCall","src":"108:30:3"},"nodeType":"YulExpressionStatement","src":"108:30:3"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"45:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"53:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"61:5:3","type":""}],"src":"7:137:3"},{"body":{"nodeType":"YulBlock","src":"202:87:3","statements":[{"nodeType":"YulAssignment","src":"212:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"234:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"221:12:3"},"nodeType":"YulFunctionCall","src":"221:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"250:26:3"},"nodeType":"YulFunctionCall","src":"250:33:3"},"nodeType":"YulExpressionStatement","src":"250:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"180:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"188:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"196:5:3","type":""}],"src":"150:139:3"},{"body":{"nodeType":"YulBlock","src":"358:80:3","statements":[{"nodeType":"YulAssignment","src":"368:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"383:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"377:5:3"},"nodeType":"YulFunctionCall","src":"377:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"368:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"426:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"399:26:3"},"nodeType":"YulFunctionCall","src":"399:33:3"},"nodeType":"YulExpressionStatement","src":"399:33:3"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"336:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"344:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"352:5:3","type":""}],"src":"295:143:3"},{"body":{"nodeType":"YulBlock","src":"518:204:3","statements":[{"body":{"nodeType":"YulBlock","src":"564:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"573:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"566:6:3"},"nodeType":"YulFunctionCall","src":"566:12:3"},"nodeType":"YulExpressionStatement","src":"566:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"539:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"535:3:3"},"nodeType":"YulFunctionCall","src":"535:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"560:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"531:3:3"},"nodeType":"YulFunctionCall","src":"531:32:3"},"nodeType":"YulIf","src":"528:2:3"},{"nodeType":"YulBlock","src":"590:125:3","statements":[{"nodeType":"YulVariableDeclaration","src":"605:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"619:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"609:6:3","type":""}]},{"nodeType":"YulAssignment","src":"634:71:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"677:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"688:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"673:3:3"},"nodeType":"YulFunctionCall","src":"673:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"697:7:3"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"644:28:3"},"nodeType":"YulFunctionCall","src":"644:61:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"634:6:3"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"488:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"499:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"511:6:3","type":""}],"src":"444:278:3"},{"body":{"nodeType":"YulBlock","src":"794:196:3","statements":[{"body":{"nodeType":"YulBlock","src":"840:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"849:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"852:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"842:6:3"},"nodeType":"YulFunctionCall","src":"842:12:3"},"nodeType":"YulExpressionStatement","src":"842:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"815:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"824:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"811:3:3"},"nodeType":"YulFunctionCall","src":"811:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"836:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"807:3:3"},"nodeType":"YulFunctionCall","src":"807:32:3"},"nodeType":"YulIf","src":"804:2:3"},{"nodeType":"YulBlock","src":"866:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"881:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"895:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"885:6:3","type":""}]},{"nodeType":"YulAssignment","src":"910:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"945:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"956:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"941:3:3"},"nodeType":"YulFunctionCall","src":"941:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"965:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"920:20:3"},"nodeType":"YulFunctionCall","src":"920:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"910:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"764:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"775:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"787:6:3","type":""}],"src":"728:262:3"},{"body":{"nodeType":"YulBlock","src":"1073:207:3","statements":[{"body":{"nodeType":"YulBlock","src":"1119:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1128:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1131:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1121:6:3"},"nodeType":"YulFunctionCall","src":"1121:12:3"},"nodeType":"YulExpressionStatement","src":"1121:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1094:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1090:3:3"},"nodeType":"YulFunctionCall","src":"1090:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1115:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1086:3:3"},"nodeType":"YulFunctionCall","src":"1086:32:3"},"nodeType":"YulIf","src":"1083:2:3"},{"nodeType":"YulBlock","src":"1145:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1160:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1174:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1164:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1189:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1235:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1246:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1231:3:3"},"nodeType":"YulFunctionCall","src":"1231:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1255:7:3"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1199:31:3"},"nodeType":"YulFunctionCall","src":"1199:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1189:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1043:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1054:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1066:6:3","type":""}],"src":"996:284:3"},{"body":{"nodeType":"YulBlock","src":"1369:324:3","statements":[{"body":{"nodeType":"YulBlock","src":"1415:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1424:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1427:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1417:6:3"},"nodeType":"YulFunctionCall","src":"1417:12:3"},"nodeType":"YulExpressionStatement","src":"1417:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1390:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1399:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1386:3:3"},"nodeType":"YulFunctionCall","src":"1386:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1411:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1382:3:3"},"nodeType":"YulFunctionCall","src":"1382:32:3"},"nodeType":"YulIf","src":"1379:2:3"},{"nodeType":"YulBlock","src":"1441:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1456:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1470:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1460:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1485:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1520:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1531:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1516:3:3"},"nodeType":"YulFunctionCall","src":"1516:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1540:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1495:20:3"},"nodeType":"YulFunctionCall","src":"1495:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1485:6:3"}]}]},{"nodeType":"YulBlock","src":"1568:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1583:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1597:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1587:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1613:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1648:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1659:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1644:3:3"},"nodeType":"YulFunctionCall","src":"1644:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1668:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1623:20:3"},"nodeType":"YulFunctionCall","src":"1623:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1613:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1331:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1342:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1354:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1362:6:3","type":""}],"src":"1286:407:3"},{"body":{"nodeType":"YulBlock","src":"1754:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1771:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1776:17:3"},"nodeType":"YulFunctionCall","src":"1776:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1764:6:3"},"nodeType":"YulFunctionCall","src":"1764:37:3"},"nodeType":"YulExpressionStatement","src":"1764:37:3"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1742:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1749:3:3","type":""}],"src":"1699:108:3"},{"body":{"nodeType":"YulBlock","src":"1878:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1895:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1918:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1900:17:3"},"nodeType":"YulFunctionCall","src":"1900:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1888:6:3"},"nodeType":"YulFunctionCall","src":"1888:37:3"},"nodeType":"YulExpressionStatement","src":"1888:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1873:3:3","type":""}],"src":"1813:118:3"},{"body":{"nodeType":"YulBlock","src":"2016:80:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2033:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2083:5:3"}],"functionName":{"name":"convert_t_contract$_IERC20_$139_to_t_address","nodeType":"YulIdentifier","src":"2038:44:3"},"nodeType":"YulFunctionCall","src":"2038:51:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2026:6:3"},"nodeType":"YulFunctionCall","src":"2026:64:3"},"nodeType":"YulExpressionStatement","src":"2026:64:3"}]},"name":"abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2004:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2011:3:3","type":""}],"src":"1937:159:3"},{"body":{"nodeType":"YulBlock","src":"2186:85:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2203:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2258:5:3"}],"functionName":{"name":"convert_t_contract$_ISwapRouter_$109_to_t_address","nodeType":"YulIdentifier","src":"2208:49:3"},"nodeType":"YulFunctionCall","src":"2208:56:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2196:6:3"},"nodeType":"YulFunctionCall","src":"2196:69:3"},"nodeType":"YulExpressionStatement","src":"2196:69:3"}]},"name":"abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2174:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2181:3:3","type":""}],"src":"2102:169:3"},{"body":{"nodeType":"YulBlock","src":"2350:74:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2367:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2411:5:3"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"2372:38:3"},"nodeType":"YulFunctionCall","src":"2372:45:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2360:6:3"},"nodeType":"YulFunctionCall","src":"2360:58:3"},"nodeType":"YulExpressionStatement","src":"2360:58:3"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2338:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2345:3:3","type":""}],"src":"2277:147:3"},{"body":{"nodeType":"YulBlock","src":"2666:1479:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2676:28:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2692:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2697:6:3","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2688:3:3"},"nodeType":"YulFunctionCall","src":"2688:16:3"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"2680:4:3","type":""}]},{"nodeType":"YulBlock","src":"2714:167:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2752:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2782:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"2789:4:3","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2778:3:3"},"nodeType":"YulFunctionCall","src":"2778:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2772:5:3"},"nodeType":"YulFunctionCall","src":"2772:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2756:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2842:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2860:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2865:4:3","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2856:3:3"},"nodeType":"YulFunctionCall","src":"2856:14:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2808:33:3"},"nodeType":"YulFunctionCall","src":"2808:63:3"},"nodeType":"YulExpressionStatement","src":"2808:63:3"}]},{"nodeType":"YulBlock","src":"2891:168:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2930:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2960:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"2967:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2956:3:3"},"nodeType":"YulFunctionCall","src":"2956:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2950:5:3"},"nodeType":"YulFunctionCall","src":"2950:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2934:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3020:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3038:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3034:3:3"},"nodeType":"YulFunctionCall","src":"3034:14:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2986:33:3"},"nodeType":"YulFunctionCall","src":"2986:63:3"},"nodeType":"YulExpressionStatement","src":"2986:63:3"}]},{"nodeType":"YulBlock","src":"3069:161:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3103:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3140:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:3"},"nodeType":"YulFunctionCall","src":"3129:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3123:5:3"},"nodeType":"YulFunctionCall","src":"3123:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3107:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3191:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3209:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3214:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:3"},"nodeType":"YulFunctionCall","src":"3205:14:3"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"3159:31:3"},"nodeType":"YulFunctionCall","src":"3159:61:3"},"nodeType":"YulExpressionStatement","src":"3159:61:3"}]},{"nodeType":"YulBlock","src":"3240:169:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3280:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3310:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3317:4:3","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3306:3:3"},"nodeType":"YulFunctionCall","src":"3306:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3300:5:3"},"nodeType":"YulFunctionCall","src":"3300:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3284:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3370:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3388:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3393:4:3","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3384:3:3"},"nodeType":"YulFunctionCall","src":"3384:14:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3336:33:3"},"nodeType":"YulFunctionCall","src":"3336:63:3"},"nodeType":"YulExpressionStatement","src":"3336:63:3"}]},{"nodeType":"YulBlock","src":"3419:168:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3458:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3488:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3495:4:3","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3484:3:3"},"nodeType":"YulFunctionCall","src":"3484:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3478:5:3"},"nodeType":"YulFunctionCall","src":"3478:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3462:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3548:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3566:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:3","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:3"},"nodeType":"YulFunctionCall","src":"3562:14:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3514:33:3"},"nodeType":"YulFunctionCall","src":"3514:63:3"},"nodeType":"YulExpressionStatement","src":"3514:63:3"}]},{"nodeType":"YulBlock","src":"3597:168:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3636:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3666:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3673:4:3","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3662:3:3"},"nodeType":"YulFunctionCall","src":"3662:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3656:5:3"},"nodeType":"YulFunctionCall","src":"3656:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3640:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3726:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3744:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3749:4:3","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:3"},"nodeType":"YulFunctionCall","src":"3740:14:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3692:33:3"},"nodeType":"YulFunctionCall","src":"3692:63:3"},"nodeType":"YulExpressionStatement","src":"3692:63:3"}]},{"nodeType":"YulBlock","src":"3775:176:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3822:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3852:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3859:4:3","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3848:3:3"},"nodeType":"YulFunctionCall","src":"3848:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3842:5:3"},"nodeType":"YulFunctionCall","src":"3842:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3826:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3912:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3930:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3935:4:3","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3926:3:3"},"nodeType":"YulFunctionCall","src":"3926:14:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3878:33:3"},"nodeType":"YulFunctionCall","src":"3878:63:3"},"nodeType":"YulExpressionStatement","src":"3878:63:3"}]},{"nodeType":"YulBlock","src":"3961:177:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4009:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4039:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"4046:4:3","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4035:3:3"},"nodeType":"YulFunctionCall","src":"4035:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4029:5:3"},"nodeType":"YulFunctionCall","src":"4029:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4013:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4099:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4117:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4122:4:3","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4113:3:3"},"nodeType":"YulFunctionCall","src":"4113:14:3"}],"functionName":{"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4065:33:3"},"nodeType":"YulFunctionCall","src":"4065:63:3"},"nodeType":"YulExpressionStatement","src":"4065:63:3"}]}]},"name":"abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2653:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2660:3:3","type":""}],"src":"2524:1621:3"},{"body":{"nodeType":"YulBlock","src":"4391:1479:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4401:28:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4417:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4422:6:3","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4413:3:3"},"nodeType":"YulFunctionCall","src":"4413:16:3"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4405:4:3","type":""}]},{"nodeType":"YulBlock","src":"4439:167:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4477:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4507:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"4514:4:3","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4503:3:3"},"nodeType":"YulFunctionCall","src":"4503:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4497:5:3"},"nodeType":"YulFunctionCall","src":"4497:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4481:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4567:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4585:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4590:4:3","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:3"},"nodeType":"YulFunctionCall","src":"4581:14:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4533:33:3"},"nodeType":"YulFunctionCall","src":"4533:63:3"},"nodeType":"YulExpressionStatement","src":"4533:63:3"}]},{"nodeType":"YulBlock","src":"4616:168:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4655:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4685:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"4692:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4681:3:3"},"nodeType":"YulFunctionCall","src":"4681:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4675:5:3"},"nodeType":"YulFunctionCall","src":"4675:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4659:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4745:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4763:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4768:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4759:3:3"},"nodeType":"YulFunctionCall","src":"4759:14:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4711:33:3"},"nodeType":"YulFunctionCall","src":"4711:63:3"},"nodeType":"YulExpressionStatement","src":"4711:63:3"}]},{"nodeType":"YulBlock","src":"4794:161:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4828:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4858:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"4865:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4854:3:3"},"nodeType":"YulFunctionCall","src":"4854:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4848:5:3"},"nodeType":"YulFunctionCall","src":"4848:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4832:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4916:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4934:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4939:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4930:3:3"},"nodeType":"YulFunctionCall","src":"4930:14:3"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"4884:31:3"},"nodeType":"YulFunctionCall","src":"4884:61:3"},"nodeType":"YulExpressionStatement","src":"4884:61:3"}]},{"nodeType":"YulBlock","src":"4965:169:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5005:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5035:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5042:4:3","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:3"},"nodeType":"YulFunctionCall","src":"5031:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5025:5:3"},"nodeType":"YulFunctionCall","src":"5025:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5009:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5095:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5113:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5118:4:3","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5109:3:3"},"nodeType":"YulFunctionCall","src":"5109:14:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5061:33:3"},"nodeType":"YulFunctionCall","src":"5061:63:3"},"nodeType":"YulExpressionStatement","src":"5061:63:3"}]},{"nodeType":"YulBlock","src":"5144:168:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5183:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5213:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5220:4:3","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5209:3:3"},"nodeType":"YulFunctionCall","src":"5209:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5203:5:3"},"nodeType":"YulFunctionCall","src":"5203:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5187:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5273:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5291:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5296:4:3","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5287:3:3"},"nodeType":"YulFunctionCall","src":"5287:14:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5239:33:3"},"nodeType":"YulFunctionCall","src":"5239:63:3"},"nodeType":"YulExpressionStatement","src":"5239:63:3"}]},{"nodeType":"YulBlock","src":"5322:169:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5362:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5392:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5399:4:3","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:3"},"nodeType":"YulFunctionCall","src":"5388:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5382:5:3"},"nodeType":"YulFunctionCall","src":"5382:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5366:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5452:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5470:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5475:4:3","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5466:3:3"},"nodeType":"YulFunctionCall","src":"5466:14:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5418:33:3"},"nodeType":"YulFunctionCall","src":"5418:63:3"},"nodeType":"YulExpressionStatement","src":"5418:63:3"}]},{"nodeType":"YulBlock","src":"5501:175:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5547:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5577:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5584:4:3","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5573:3:3"},"nodeType":"YulFunctionCall","src":"5573:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5567:5:3"},"nodeType":"YulFunctionCall","src":"5567:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5551:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5637:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5655:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5660:4:3","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5651:3:3"},"nodeType":"YulFunctionCall","src":"5651:14:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5603:33:3"},"nodeType":"YulFunctionCall","src":"5603:63:3"},"nodeType":"YulExpressionStatement","src":"5603:63:3"}]},{"nodeType":"YulBlock","src":"5686:177:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5734:43:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5764:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5771:4:3","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:3"},"nodeType":"YulFunctionCall","src":"5760:16:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5754:5:3"},"nodeType":"YulFunctionCall","src":"5754:23:3"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5738:12:3","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5824:12:3"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5842:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5847:4:3","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5838:3:3"},"nodeType":"YulFunctionCall","src":"5838:14:3"}],"functionName":{"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5790:33:3"},"nodeType":"YulFunctionCall","src":"5790:63:3"},"nodeType":"YulExpressionStatement","src":"5790:63:3"}]}]},"name":"abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4378:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4385:3:3","type":""}],"src":"4247:1623:3"},{"body":{"nodeType":"YulBlock","src":"5931:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5948:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5971:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5953:17:3"},"nodeType":"YulFunctionCall","src":"5953:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5941:6:3"},"nodeType":"YulFunctionCall","src":"5941:37:3"},"nodeType":"YulExpressionStatement","src":"5941:37:3"}]},"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5919:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5926:3:3","type":""}],"src":"5876:108:3"},{"body":{"nodeType":"YulBlock","src":"6043:52:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6060:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6082:5:3"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"6065:16:3"},"nodeType":"YulFunctionCall","src":"6065:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6053:6:3"},"nodeType":"YulFunctionCall","src":"6053:36:3"},"nodeType":"YulExpressionStatement","src":"6053:36:3"}]},"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6031:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6038:3:3","type":""}],"src":"5990:105:3"},{"body":{"nodeType":"YulBlock","src":"6164:52:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6181:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6203:5:3"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"6186:16:3"},"nodeType":"YulFunctionCall","src":"6186:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6174:6:3"},"nodeType":"YulFunctionCall","src":"6174:36:3"},"nodeType":"YulExpressionStatement","src":"6174:36:3"}]},"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6152:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6159:3:3","type":""}],"src":"6101:115:3"},{"body":{"nodeType":"YulBlock","src":"6277:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6294:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6317:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6299:17:3"},"nodeType":"YulFunctionCall","src":"6299:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6287:6:3"},"nodeType":"YulFunctionCall","src":"6287:37:3"},"nodeType":"YulExpressionStatement","src":"6287:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6265:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6272:3:3","type":""}],"src":"6222:108:3"},{"body":{"nodeType":"YulBlock","src":"6401:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6418:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6441:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6423:17:3"},"nodeType":"YulFunctionCall","src":"6423:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6411:6:3"},"nodeType":"YulFunctionCall","src":"6411:37:3"},"nodeType":"YulExpressionStatement","src":"6411:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6389:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6396:3:3","type":""}],"src":"6336:118:3"},{"body":{"nodeType":"YulBlock","src":"6558:124:3","statements":[{"nodeType":"YulAssignment","src":"6568:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6580:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6591:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:3"},"nodeType":"YulFunctionCall","src":"6576:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6568:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6648:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6661:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6672:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6657:3:3"},"nodeType":"YulFunctionCall","src":"6657:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6604:43:3"},"nodeType":"YulFunctionCall","src":"6604:71:3"},"nodeType":"YulExpressionStatement","src":"6604:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6530:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6542:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6553:4:3","type":""}],"src":"6460:222:3"},{"body":{"nodeType":"YulBlock","src":"6822:214:3","statements":[{"nodeType":"YulAssignment","src":"6832:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6844:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6855:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6840:3:3"},"nodeType":"YulFunctionCall","src":"6840:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6832:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6912:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6925:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6936:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6921:3:3"},"nodeType":"YulFunctionCall","src":"6921:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6868:43:3"},"nodeType":"YulFunctionCall","src":"6868:71:3"},"nodeType":"YulExpressionStatement","src":"6868:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7001:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7014:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7025:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7010:3:3"},"nodeType":"YulFunctionCall","src":"7010:18:3"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6949:51:3"},"nodeType":"YulFunctionCall","src":"6949:80:3"},"nodeType":"YulExpressionStatement","src":"6949:80:3"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6786:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6798:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6806:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6817:4:3","type":""}],"src":"6688:348:3"},{"body":{"nodeType":"YulBlock","src":"7168:206:3","statements":[{"nodeType":"YulAssignment","src":"7178:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7190:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7201:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7186:3:3"},"nodeType":"YulFunctionCall","src":"7186:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7178:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7258:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7271:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7282:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7267:3:3"},"nodeType":"YulFunctionCall","src":"7267:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7214:43:3"},"nodeType":"YulFunctionCall","src":"7214:71:3"},"nodeType":"YulExpressionStatement","src":"7214:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7339:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7352:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7363:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7348:3:3"},"nodeType":"YulFunctionCall","src":"7348:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7295:43:3"},"nodeType":"YulFunctionCall","src":"7295:72:3"},"nodeType":"YulExpressionStatement","src":"7295:72:3"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7132:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7144:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7152:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7163:4:3","type":""}],"src":"7042:332:3"},{"body":{"nodeType":"YulBlock","src":"7492:138:3","statements":[{"nodeType":"YulAssignment","src":"7502:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7514:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7525:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7510:3:3"},"nodeType":"YulFunctionCall","src":"7510:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7502:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7596:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7609:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7620:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7605:3:3"},"nodeType":"YulFunctionCall","src":"7605:17:3"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7538:57:3"},"nodeType":"YulFunctionCall","src":"7538:85:3"},"nodeType":"YulExpressionStatement","src":"7538:85:3"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$139__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7464:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7476:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7487:4:3","type":""}],"src":"7380:250:3"},{"body":{"nodeType":"YulBlock","src":"7753:143:3","statements":[{"nodeType":"YulAssignment","src":"7763:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7775:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7786:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7771:3:3"},"nodeType":"YulFunctionCall","src":"7771:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7763:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7862:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7875:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7886:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7871:3:3"},"nodeType":"YulFunctionCall","src":"7871:17:3"}],"functionName":{"name":"abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7799:62:3"},"nodeType":"YulFunctionCall","src":"7799:90:3"},"nodeType":"YulExpressionStatement","src":"7799:90:3"}]},"name":"abi_encode_tuple_t_contract$_ISwapRouter_$109__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7725:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7737:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7748:4:3","type":""}],"src":"7636:260:3"},{"body":{"nodeType":"YulBlock","src":"8076:201:3","statements":[{"nodeType":"YulAssignment","src":"8086:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8098:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8109:3:3","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8094:3:3"},"nodeType":"YulFunctionCall","src":"8094:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8086:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8243:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8256:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8267:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8252:3:3"},"nodeType":"YulFunctionCall","src":"8252:17:3"}],"functionName":{"name":"abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8123:119:3"},"nodeType":"YulFunctionCall","src":"8123:147:3"},"nodeType":"YulExpressionStatement","src":"8123:147:3"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8048:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8060:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8071:4:3","type":""}],"src":"7902:375:3"},{"body":{"nodeType":"YulBlock","src":"8459:203:3","statements":[{"nodeType":"YulAssignment","src":"8469:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8481:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8492:3:3","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8477:3:3"},"nodeType":"YulFunctionCall","src":"8477:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8469:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8628:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8652:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:3"},"nodeType":"YulFunctionCall","src":"8637:17:3"}],"functionName":{"name":"abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8506:121:3"},"nodeType":"YulFunctionCall","src":"8506:149:3"},"nodeType":"YulExpressionStatement","src":"8506:149:3"}]},"name":"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$81_memory_ptr__to_t_struct$_ExactOutputSingleParams_$81_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8431:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8443:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8454:4:3","type":""}],"src":"8283:379:3"},{"body":{"nodeType":"YulBlock","src":"8764:122:3","statements":[{"nodeType":"YulAssignment","src":"8774:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8786:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8797:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8782:3:3"},"nodeType":"YulFunctionCall","src":"8782:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8774:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8852:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8865:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8876:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8861:3:3"},"nodeType":"YulFunctionCall","src":"8861:17:3"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"8810:41:3"},"nodeType":"YulFunctionCall","src":"8810:69:3"},"nodeType":"YulExpressionStatement","src":"8810:69:3"}]},"name":"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8736:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8748:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8759:4:3","type":""}],"src":"8668:218:3"},{"body":{"nodeType":"YulBlock","src":"8990:124:3","statements":[{"nodeType":"YulAssignment","src":"9000:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9012:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"9023:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:3"},"nodeType":"YulFunctionCall","src":"9008:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9000:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9080:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9093:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"9104:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9089:3:3"},"nodeType":"YulFunctionCall","src":"9089:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9036:43:3"},"nodeType":"YulFunctionCall","src":"9036:71:3"},"nodeType":"YulExpressionStatement","src":"9036:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8962:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8974:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8985:4:3","type":""}],"src":"8892:222:3"},{"body":{"nodeType":"YulBlock","src":"9165:51:3","statements":[{"nodeType":"YulAssignment","src":"9175:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9204:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9186:17:3"},"nodeType":"YulFunctionCall","src":"9186:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9175:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9147:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9157:7:3","type":""}],"src":"9120:96:3"},{"body":{"nodeType":"YulBlock","src":"9264:48:3","statements":[{"nodeType":"YulAssignment","src":"9274:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9299:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9292:6:3"},"nodeType":"YulFunctionCall","src":"9292:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9285:6:3"},"nodeType":"YulFunctionCall","src":"9285:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9274:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9246:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9256:7:3","type":""}],"src":"9222:90:3"},{"body":{"nodeType":"YulBlock","src":"9363:81:3","statements":[{"nodeType":"YulAssignment","src":"9373:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9388:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"9395:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9384:3:3"},"nodeType":"YulFunctionCall","src":"9384:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9373:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9345:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9355:7:3","type":""}],"src":"9318:126:3"},{"body":{"nodeType":"YulBlock","src":"9494:47:3","statements":[{"nodeType":"YulAssignment","src":"9504:31:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9519:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"9526:8:3","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9515:3:3"},"nodeType":"YulFunctionCall","src":"9515:20:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9504:7:3"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9476:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9486:7:3","type":""}],"src":"9450:91:3"},{"body":{"nodeType":"YulBlock","src":"9592:32:3","statements":[{"nodeType":"YulAssignment","src":"9602:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"9613:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9602:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9574:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9584:7:3","type":""}],"src":"9547:77:3"},{"body":{"nodeType":"YulBlock","src":"9704:80:3","statements":[{"nodeType":"YulAssignment","src":"9714:64:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9772:5:3"}],"functionName":{"name":"convert_t_contract$_IERC20_$139_to_t_uint160","nodeType":"YulIdentifier","src":"9727:44:3"},"nodeType":"YulFunctionCall","src":"9727:51:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9714:9:3"}]}]},"name":"convert_t_contract$_IERC20_$139_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9684:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9694:9:3","type":""}],"src":"9630:154:3"},{"body":{"nodeType":"YulBlock","src":"9864:53:3","statements":[{"nodeType":"YulAssignment","src":"9874:37:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9905:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9887:17:3"},"nodeType":"YulFunctionCall","src":"9887:24:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9874:9:3"}]}]},"name":"convert_t_contract$_IERC20_$139_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9844:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9854:9:3","type":""}],"src":"9790:127:3"},{"body":{"nodeType":"YulBlock","src":"10002:85:3","statements":[{"nodeType":"YulAssignment","src":"10012:69:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10075:5:3"}],"functionName":{"name":"convert_t_contract$_ISwapRouter_$109_to_t_uint160","nodeType":"YulIdentifier","src":"10025:49:3"},"nodeType":"YulFunctionCall","src":"10025:56:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10012:9:3"}]}]},"name":"convert_t_contract$_ISwapRouter_$109_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9982:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9992:9:3","type":""}],"src":"9923:164:3"},{"body":{"nodeType":"YulBlock","src":"10172:53:3","statements":[{"nodeType":"YulAssignment","src":"10182:37:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10213:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10195:17:3"},"nodeType":"YulFunctionCall","src":"10195:24:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10182:9:3"}]}]},"name":"convert_t_contract$_ISwapRouter_$109_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10152:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10162:9:3","type":""}],"src":"10093:132:3"},{"body":{"nodeType":"YulBlock","src":"10299:53:3","statements":[{"nodeType":"YulAssignment","src":"10309:37:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10340:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10322:17:3"},"nodeType":"YulFunctionCall","src":"10322:24:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10309:9:3"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10279:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10289:9:3","type":""}],"src":"10231:121:3"},{"body":{"nodeType":"YulBlock","src":"10398:76:3","statements":[{"body":{"nodeType":"YulBlock","src":"10452:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10461:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10464:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10454:6:3"},"nodeType":"YulFunctionCall","src":"10454:12:3"},"nodeType":"YulExpressionStatement","src":"10454:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10421:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10443:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10428:14:3"},"nodeType":"YulFunctionCall","src":"10428:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10418:2:3"},"nodeType":"YulFunctionCall","src":"10418:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10411:6:3"},"nodeType":"YulFunctionCall","src":"10411:40:3"},"nodeType":"YulIf","src":"10408:2:3"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10391:5:3","type":""}],"src":"10358:116:3"},{"body":{"nodeType":"YulBlock","src":"10523:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"10580:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10589:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10592:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10582:6:3"},"nodeType":"YulFunctionCall","src":"10582:12:3"},"nodeType":"YulExpressionStatement","src":"10582:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10546:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10571:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10553:17:3"},"nodeType":"YulFunctionCall","src":"10553:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10543:2:3"},"nodeType":"YulFunctionCall","src":"10543:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10536:6:3"},"nodeType":"YulFunctionCall","src":"10536:43:3"},"nodeType":"YulIf","src":"10533:2:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10516:5:3","type":""}],"src":"10480:122:3"}]},"contents":"{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$139_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$109_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$139__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$139_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$109__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$109_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$37_memory_ptr__to_t_struct$_ExactInputSingleParams_$37_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$37_memory_ptr_to_t_struct$_ExactInputSingleParams_$37_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$81_memory_ptr__to_t_struct$_ExactOutputSingleParams_$81_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$81_memory_ptr_to_t_struct$_ExactOutputSingleParams_$81_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$139_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$139_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$139_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$109_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISwapRouter_$109_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$109_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"147":[{"length":32,"start":572},{"length":32,"start":917},{"length":32,"start":1120},{"length":32,"start":1219},{"length":32,"start":1563},{"length":32,"start":1804}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806373bd43ad1161005b57806373bd43ad14610105578063ad5c464814610135578063c31c9c0714610153578063c4b69a181461017157610088565b8063089fe6aa1461008d5780631b6b6d23146100ab5780633268cc56146100c957806357970e93146100e7575b600080fd5b6100956101a1565b6040516100a29190610c00565b60405180910390f35b6100b36101a7565b6040516100c09190610b25565b60405180910390f35b6100d16101bf565b6040516100de9190610b25565b60405180910390f35b6100ef6101d7565b6040516100fc9190610b92565b60405180910390f35b61011f600480360381019061011a91906108bd565b6101fb565b60405161012c9190610c1b565b60405180910390f35b61013d610446565b60405161014a9190610b25565b60405180910390f35b61015b61045e565b6040516101689190610bad565b60405180910390f35b61018b6004803603810190610186919061090f565b610482565b6040516101989190610c1b565b60405180910390f35b610bb881565b73779877a7b0d9e8603169ddbd7836e478b462478981565b73e592427a0aece92de3edee1f18e0157c0586156481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610279929190610b69565b602060405180830381600087803b15801561029357600080fd5b505af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610894565b50600060405180610100016040528073779877a7b0d9e8603169ddbd7836e478b462478973ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016103ec9190610bc8565b602060405180830381600087803b15801561040657600080fd5b505af115801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e91906108e6565b915050919050565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610500929190610b69565b602060405180830381600087803b15801561051a57600080fd5b505af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610894565b50600060405180610100016040528073779877a7b0d9e8603169ddbd7836e478b462478973ffffffffffffffffffffffffffffffffffffffff16815260200173b4fbf271143f4fbf7b91a5ded31805e42b2208d673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001428152602001858152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016106729190610be4565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c491906108e6565b91508282101561084e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f000000000000000000000000000000000000000000000000000000000000000060006040518363ffffffff1660e01b815260040161074a929190610b40565b602060405180830381600087803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610894565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb308486036040518363ffffffff1660e01b81526004016107fa929190610b69565b602060405180830381600087803b15801561081457600080fd5b505af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190610894565b505b5092915050565b60008151905061086481610ce7565b92915050565b60008135905061087981610cfe565b92915050565b60008151905061088e81610cfe565b92915050565b6000602082840312156108a657600080fd5b60006108b484828501610855565b91505092915050565b6000602082840312156108cf57600080fd5b60006108dd8482850161086a565b91505092915050565b6000602082840312156108f857600080fd5b60006109068482850161087f565b91505092915050565b6000806040838503121561092257600080fd5b60006109308582860161086a565b92505060206109418582860161086a565b9150509250929050565b61095481610c36565b82525050565b61096381610c36565b82525050565b61097281610c8d565b82525050565b61098181610cb1565b82525050565b61099081610cd5565b82525050565b610100820160008201516109ad600085018261094b565b5060208201516109c0602085018261094b565b5060408201516109d36040850182610ae9565b5060608201516109e6606085018261094b565b5060808201516109f96080850182610b07565b5060a0820151610a0c60a0850182610b07565b5060c0820151610a1f60c0850182610b07565b5060e0820151610a3260e0850182610ada565b50505050565b61010082016000820151610a4f600085018261094b565b506020820151610a62602085018261094b565b506040820151610a756040850182610ae9565b506060820151610a88606085018261094b565b506080820151610a9b6080850182610b07565b5060a0820151610aae60a0850182610b07565b5060c0820151610ac160c0850182610b07565b5060e0820151610ad460e0850182610ada565b50505050565b610ae381610c54565b82525050565b610af281610c74565b82525050565b610b0181610c74565b82525050565b610b1081610c83565b82525050565b610b1f81610c83565b82525050565b6000602082019050610b3a600083018461095a565b92915050565b6000604082019050610b55600083018561095a565b610b626020830184610987565b9392505050565b6000604082019050610b7e600083018561095a565b610b8b6020830184610b16565b9392505050565b6000602082019050610ba76000830184610969565b92915050565b6000602082019050610bc26000830184610978565b92915050565b600061010082019050610bde6000830184610996565b92915050565b600061010082019050610bfa6000830184610a38565b92915050565b6000602082019050610c156000830184610af8565b92915050565b6000602082019050610c306000830184610b16565b92915050565b6000610c4182610c54565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610c9882610c9f565b9050919050565b6000610caa82610c54565b9050919050565b6000610cbc82610cc3565b9050919050565b6000610cce82610c54565b9050919050565b6000610ce082610c83565b9050919050565b610cf081610c48565b8114610cfb57600080fd5b50565b610d0781610c83565b8114610d1257600080fd5b5056fea2646970667358221220be7e874e2674b38d1ce62b2a68b4ef070932dd3a949f78b7b7a600ae7c855f5d64736f6c63430007060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73BD43AD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73BD43AD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC4B69A18 EQ PUSH2 0x171 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x89FE6AA EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3268CC56 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 DUP2 JUMP JUMPDEST PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x279 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x500 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x779877A7B0D9E8603169DDBD7836E478B4624789 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xB4FBF271143F4FBF7B91A5DED31805E42B2208D6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDB3E2198 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 LT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP3 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 DUP7 SUB PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x828 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x864 DUP2 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x879 DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0xCFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B4 DUP5 DUP3 DUP6 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DD DUP5 DUP3 DUP6 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x930 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x941 DUP6 DUP3 DUP7 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x954 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0xC36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x981 DUP2 PUSH2 0xCB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x990 DUP2 PUSH2 0xCD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x9AD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x9C0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x9D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x9E6 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x9F9 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xA0C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xA1F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xA32 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xA4F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xA62 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xA75 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xA88 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xA9B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0xAAE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0xAC1 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0xAD4 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0xADA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xAF2 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x95A JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x996 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xBFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAA DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBC DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP3 PUSH2 0xC83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xC48 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD07 DUP2 PUSH2 0xC83 JUMP JUMPDEST DUP2 EQ PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH31 0x874E2674B38D1CE62B2A68B4EF070932DD3A949F78B7B7A600AE7C855F5D64 PUSH20 0x6F6C634300070600330000000000000000000000 ","sourceMap":"411:5312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1295:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1908:1342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1215:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;961:68;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3881:1840;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1399:37;1432:4;1399:37;:::o;1136:73::-;1167:42;1136:73;:::o;438:82::-;478:42;438:82;:::o;1295:38::-;;;;;;;;;;;;:::o;1908:1342::-;1988:17;2388:9;;;;;;;;;;;:17;;;2414:10;2427:8;2388:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2684;2735:389;;;;;;;;1167:42;2735:389;;;;;;1246:42;2735:389;;;;;;1432:4;2735:389;;;;;;2913:4;2735:389;;;;;;2983:15;2735:389;;;;3026:8;2735:389;;;;3070:1;2735:389;;;;3108:1;2735:389;;;;;2684:440;;3208:10;:27;;;3236:6;3208:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3196:47;;1908:1342;;;;:::o;1215:73::-;1246:42;1215:73;:::o;961:68::-;;;:::o;3881:1840::-;3996:16;4520:9;;;;;;;;;;;:17;;;4546:10;4559:15;4520:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4586:49;4638:405;;;;;;;;1167:42;4638:405;;;;;;1246:42;4638:405;;;;;;1432:4;4638:405;;;;;;4817:4;4638:405;;;;;;4887:15;4638:405;;;;4931:9;4638:405;;;;4975:15;4638:405;;;;5027:1;4638:405;;;;;4586:457;;5167:10;:28;;;5196:6;5167:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5156:47;;5474:15;5463:8;:26;5459:256;;;5505:9;;;;;;;;;;:17;;;5531:10;5544:1;5505:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5560:9;;;;;;;;;;:18;;;5604:4;5682:8;5664:15;:26;5560:144;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5459:256;3881:1840;;;;;:::o;7:137:3:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:143::-;;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;358:80;;;;:::o;444:278::-;;560:2;548:9;539:7;535:23;531:32;528:2;;;576:1;573;566:12;528:2;619:1;644:61;697:7;688:6;677:9;673:22;644:61;:::i;:::-;634:71;;590:125;518:204;;;;:::o;728:262::-;;836:2;824:9;815:7;811:23;807:32;804:2;;;852:1;849;842:12;804:2;895:1;920:53;965:7;956:6;945:9;941:22;920:53;:::i;:::-;910:63;;866:117;794:196;;;;:::o;996:284::-;;1115:2;1103:9;1094:7;1090:23;1086:32;1083:2;;;1131:1;1128;1121:12;1083:2;1174:1;1199:64;1255:7;1246:6;1235:9;1231:22;1199:64;:::i;:::-;1189:74;;1145:128;1073:207;;;;:::o;1286:407::-;;;1411:2;1399:9;1390:7;1386:23;1382:32;1379:2;;;1427:1;1424;1417:12;1379:2;1470:1;1495:53;1540:7;1531:6;1520:9;1516:22;1495:53;:::i;:::-;1485:63;;1441:117;1597:2;1623:53;1668:7;1659:6;1648:9;1644:22;1623:53;:::i;:::-;1613:63;;1568:118;1369:324;;;;;:::o;1699:108::-;1776:24;1794:5;1776:24;:::i;:::-;1771:3;1764:37;1754:53;;:::o;1813:118::-;1900:24;1918:5;1900:24;:::i;:::-;1895:3;1888:37;1878:53;;:::o;1937:159::-;2038:51;2083:5;2038:51;:::i;:::-;2033:3;2026:64;2016:80;;:::o;2102:169::-;2208:56;2258:5;2208:56;:::i;:::-;2203:3;2196:69;2186:85;;:::o;2277:147::-;2372:45;2411:5;2372:45;:::i;:::-;2367:3;2360:58;2350:74;;:::o;2524:1621::-;2697:6;2692:3;2688:16;2789:4;2782:5;2778:16;2772:23;2808:63;2865:4;2860:3;2856:14;2842:12;2808:63;:::i;:::-;2714:167;2967:4;2960:5;2956:16;2950:23;2986:63;3043:4;3038:3;3034:14;3020:12;2986:63;:::i;:::-;2891:168;3140:4;3133:5;3129:16;3123:23;3159:61;3214:4;3209:3;3205:14;3191:12;3159:61;:::i;:::-;3069:161;3317:4;3310:5;3306:16;3300:23;3336:63;3393:4;3388:3;3384:14;3370:12;3336:63;:::i;:::-;3240:169;3495:4;3488:5;3484:16;3478:23;3514:63;3571:4;3566:3;3562:14;3548:12;3514:63;:::i;:::-;3419:168;3673:4;3666:5;3662:16;3656:23;3692:63;3749:4;3744:3;3740:14;3726:12;3692:63;:::i;:::-;3597:168;3859:4;3852:5;3848:16;3842:23;3878:63;3935:4;3930:3;3926:14;3912:12;3878:63;:::i;:::-;3775:176;4046:4;4039:5;4035:16;4029:23;4065:63;4122:4;4117:3;4113:14;4099:12;4065:63;:::i;:::-;3961:177;2666:1479;;;:::o;4247:1623::-;4422:6;4417:3;4413:16;4514:4;4507:5;4503:16;4497:23;4533:63;4590:4;4585:3;4581:14;4567:12;4533:63;:::i;:::-;4439:167;4692:4;4685:5;4681:16;4675:23;4711:63;4768:4;4763:3;4759:14;4745:12;4711:63;:::i;:::-;4616:168;4865:4;4858:5;4854:16;4848:23;4884:61;4939:4;4934:3;4930:14;4916:12;4884:61;:::i;:::-;4794:161;5042:4;5035:5;5031:16;5025:23;5061:63;5118:4;5113:3;5109:14;5095:12;5061:63;:::i;:::-;4965:169;5220:4;5213:5;5209:16;5203:23;5239:63;5296:4;5291:3;5287:14;5273:12;5239:63;:::i;:::-;5144:168;5399:4;5392:5;5388:16;5382:23;5418:63;5475:4;5470:3;5466:14;5452:12;5418:63;:::i;:::-;5322:169;5584:4;5577:5;5573:16;5567:23;5603:63;5660:4;5655:3;5651:14;5637:12;5603:63;:::i;:::-;5501:175;5771:4;5764:5;5760:16;5754:23;5790:63;5847:4;5842:3;5838:14;5824:12;5790:63;:::i;:::-;5686:177;4391:1479;;;:::o;5876:108::-;5953:24;5971:5;5953:24;:::i;:::-;5948:3;5941:37;5931:53;;:::o;5990:105::-;6065:23;6082:5;6065:23;:::i;:::-;6060:3;6053:36;6043:52;;:::o;6101:115::-;6186:23;6203:5;6186:23;:::i;:::-;6181:3;6174:36;6164:52;;:::o;6222:108::-;6299:24;6317:5;6299:24;:::i;:::-;6294:3;6287:37;6277:53;;:::o;6336:118::-;6423:24;6441:5;6423:24;:::i;:::-;6418:3;6411:37;6401:53;;:::o;6460:222::-;;6591:2;6580:9;6576:18;6568:26;;6604:71;6672:1;6661:9;6657:17;6648:6;6604:71;:::i;:::-;6558:124;;;;:::o;6688:348::-;;6855:2;6844:9;6840:18;6832:26;;6868:71;6936:1;6925:9;6921:17;6912:6;6868:71;:::i;:::-;6949:80;7025:2;7014:9;7010:18;7001:6;6949:80;:::i;:::-;6822:214;;;;;:::o;7042:332::-;;7201:2;7190:9;7186:18;7178:26;;7214:71;7282:1;7271:9;7267:17;7258:6;7214:71;:::i;:::-;7295:72;7363:2;7352:9;7348:18;7339:6;7295:72;:::i;:::-;7168:206;;;;;:::o;7380:250::-;;7525:2;7514:9;7510:18;7502:26;;7538:85;7620:1;7609:9;7605:17;7596:6;7538:85;:::i;:::-;7492:138;;;;:::o;7636:260::-;;7786:2;7775:9;7771:18;7763:26;;7799:90;7886:1;7875:9;7871:17;7862:6;7799:90;:::i;:::-;7753:143;;;;:::o;7902:375::-;;8109:3;8098:9;8094:19;8086:27;;8123:147;8267:1;8256:9;8252:17;8243:6;8123:147;:::i;:::-;8076:201;;;;:::o;8283:379::-;;8492:3;8481:9;8477:19;8469:27;;8506:149;8652:1;8641:9;8637:17;8628:6;8506:149;:::i;:::-;8459:203;;;;:::o;8668:218::-;;8797:2;8786:9;8782:18;8774:26;;8810:69;8876:1;8865:9;8861:17;8852:6;8810:69;:::i;:::-;8764:122;;;;:::o;8892:222::-;;9023:2;9012:9;9008:18;9000:26;;9036:71;9104:1;9093:9;9089:17;9080:6;9036:71;:::i;:::-;8990:124;;;;:::o;9120:96::-;;9186:24;9204:5;9186:24;:::i;:::-;9175:35;;9165:51;;;:::o;9222:90::-;;9299:5;9292:13;9285:21;9274:32;;9264:48;;;:::o;9318:126::-;;9395:42;9388:5;9384:54;9373:65;;9363:81;;;:::o;9450:91::-;;9526:8;9519:5;9515:20;9504:31;;9494:47;;;:::o;9547:77::-;;9613:5;9602:16;;9592:32;;;:::o;9630:154::-;;9727:51;9772:5;9727:51;:::i;:::-;9714:64;;9704:80;;;:::o;9790:127::-;;9887:24;9905:5;9887:24;:::i;:::-;9874:37;;9864:53;;;:::o;9923:164::-;;10025:56;10075:5;10025:56;:::i;:::-;10012:69;;10002:85;;;:::o;10093:132::-;;10195:24;10213:5;10195:24;:::i;:::-;10182:37;;10172:53;;;:::o;10231:121::-;;10322:24;10340:5;10322:24;:::i;:::-;10309:37;;10299:53;;;:::o;10358:116::-;10428:21;10443:5;10428:21;:::i;:::-;10421:5;10418:32;10408:2;;10464:1;10461;10454:12;10408:2;10398:76;:::o;10480:122::-;10553:24;10571:5;10553:24;:::i;:::-;10546:5;10543:35;10533:2;;10592:1;10589;10582:12;10533:2;10523:79;:::o"},"methodIdentifiers":{"LINK()":"1b6b6d23","WETH()":"ad5c4648","linkToken()":"57970e93","poolFee()":"089fe6aa","routerAddress()":"3268cc56","swapExactInputSingle(uint256)":"73bd43ad","swapExactOutputSingle(uint256,uint256)":"c4b69a18","swapRouter()":"c31c9c07"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its LINK for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of LINK that will be swapped for WETH.\"},\"returns\":{\"amountOut\":\"The amount of WETH received.\"}},\"swapExactOutputSingle(uint256,uint256)\":{\"details\":\"The calling address must approve this contract to spend its LINK for this function to succeed. As the amount of input LINK is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of LINK we are willing to spend to receive the specified amount of WETH.\",\"amountOut\":\"The exact amount of WETH to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of LINK actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of LINK for a maximum possible amount of WETH using the LINK/WETH 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of LINK for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SingleSwap.sol\":\"SingleSwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SingleSwap.sol\":{\"keccak256\":\"0x32b8fedc3e57a7ca773870100ddad6ec2653c0a41dad8332481f28495ae0a682\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e624a2e5ca2b70ca0459a4b92dc587da9aea1e329b3e18ca1b6e83b7672aa263\",\"dweb:/ipfs/QmNRpHUqYpukH3fPwB37ZmudpAGw8CnNyYL3cY2cLUuuUJ\"]}},\"version\":1}"}}}}}